<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AFPhotoEditorContext.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AFPhotoEditorContext</TokenIdentifier>
			<Abstract type="html">Photo Editor Contexts are generated by calling the createContextWithImage: or createContextWithImage:maxSize: methods of AFPhotoEditorSession.
A context encapsulates an input image and an output size. If not specified, the output size defaults to the image size. In the Basic SDK, the
output size is scaled down to a maximum of 3MP (if necessary, maintaining aspect ratio). There is no such limitation in the Premium SDK.</Abstract>
			<DeclaredIn>AFPhotoEditorContext.h</DeclaredIn>
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFPhotoEditorContext/setSession:</TokenIdentifier>
			<Abstract type="html">The session that the context was generated from.</Abstract>
			<DeclaredIn>AFPhotoEditorContext.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak, readonly) AFPhotoEditorSession *session</Declaration>
			
			
			<Anchor>//api/name/session</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AFPhotoEditorContext/session</TokenIdentifier>
			<Abstract type="html">The session that the context was generated from.</Abstract>
			<DeclaredIn>AFPhotoEditorContext.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak, readonly) AFPhotoEditorSession *session</Declaration>
			
			
			<Anchor>//api/name/session</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFPhotoEditorContext/setSize:</TokenIdentifier>
			<Abstract type="html">The size that the context&apos;s image will be output at.</Abstract>
			<DeclaredIn>AFPhotoEditorContext.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) CGSize size</Declaration>
			
			
			<Anchor>//api/name/size</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AFPhotoEditorContext/size</TokenIdentifier>
			<Abstract type="html">The size that the context&apos;s image will be output at.</Abstract>
			<DeclaredIn>AFPhotoEditorContext.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) CGSize size</Declaration>
			
			
			<Anchor>//api/name/size</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFPhotoEditorContext/setCanceled:</TokenIdentifier>
			<Abstract type="html">Specifies if the context&apos;s rendering has been cancelled.</Abstract>
			<DeclaredIn>AFPhotoEditorContext.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly, getter=isCanceled) BOOL canceled</Declaration>
			
			
			<Anchor>//api/name/canceled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AFPhotoEditorContext/canceled</TokenIdentifier>
			<Abstract type="html">Specifies if the context&apos;s rendering has been cancelled.</Abstract>
			<DeclaredIn>AFPhotoEditorContext.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly, getter=isCanceled) BOOL canceled</Declaration>
			
			
			<Anchor>//api/name/canceled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFPhotoEditorContext/setModified:</TokenIdentifier>
			<Abstract type="html">Specifies if the context&apos;s session has been modified.</Abstract>
			<DeclaredIn>AFPhotoEditorContext.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly, getter=isModified) BOOL modified</Declaration>
			
			
			<Anchor>//api/name/modified</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AFPhotoEditorContext/modified</TokenIdentifier>
			<Abstract type="html">Specifies if the context&apos;s session has been modified.</Abstract>
			<DeclaredIn>AFPhotoEditorContext.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly, getter=isModified) BOOL modified</Declaration>
			
			
			<Anchor>//api/name/modified</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFPhotoEditorContext/setHasBegunRendering:</TokenIdentifier>
			<Abstract type="html">Specifies whether rendering has begun on the context.</Abstract>
			<DeclaredIn>AFPhotoEditorContext.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) BOOL hasBegunRendering</Declaration>
			
			
			<Anchor>//api/name/hasBegunRendering</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AFPhotoEditorContext/hasBegunRendering</TokenIdentifier>
			<Abstract type="html">Specifies whether rendering has begun on the context.</Abstract>
			<DeclaredIn>AFPhotoEditorContext.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readonly) BOOL hasBegunRendering</Declaration>
			
			
			<Anchor>//api/name/hasBegunRendering</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFPhotoEditorContext/render:</TokenIdentifier>
			<Abstract type="html">Replays all actions tracked by the generating AFPhotoEditorSession on the context&apos;s image.</Abstract>
			<DeclaredIn>AFPhotoEditorContext.h</DeclaredIn>			
			
			<Declaration>- (void)render:(void ( ^ ) ( UIImage *result ))completion</Declaration>
			<Parameters>
				<Parameter>
					<Name>completion</Name>
					<Abstract type="html">The block to be called when the image&apos;s render is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/render:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFPhotoEditorContext/cancelRendering</TokenIdentifier>
			<Abstract type="html">Cancels the context&apos;s rendering.</Abstract>
			<DeclaredIn>AFPhotoEditorContext.h</DeclaredIn>			
			
			<Declaration>- (void)cancelRendering</Declaration>
			
			
			<Anchor>//api/name/cancelRendering</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFPhotoEditorContext/renderInputImage:completion:</TokenIdentifier>
			<Abstract type="html">Deprecated.</Abstract>
			<DeclaredIn>AFPhotoEditorContext.h</DeclaredIn>			
			
			<Declaration>- (void)renderInputImage:(UIImage *)image completion:(void ( ^ ) ( UIImage *result ))completion</Declaration>
			<Parameters>
				<Parameter>
					<Name>image</Name>
					<Abstract type="html">The input image.</Abstract>
				</Parameter><Parameter>
					<Name>completion</Name>
					<Abstract type="html">The completion block.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/renderInputImage:completion:</Anchor>
		</Token>
		
	</File>
</Tokens>