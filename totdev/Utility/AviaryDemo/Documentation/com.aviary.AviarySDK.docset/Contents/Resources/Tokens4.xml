<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AFPhotoEditorCustomization.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AFPhotoEditorCustomization</TokenIdentifier>
			<Abstract type="html">This class provides a powerful interface for configuring an AFPhotoEditorController&apos;s appearance and behavior. While changing values after presenting an AFPhotoEditorController instance is possible, it is strongly recommended that you make all necessary calls to AFPhotoEditorCustomization before editor presentation. Example of usage can be found in the Aviary iOS SDK Customization Guide.</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/enableInAppPurchases:</TokenIdentifier>
			<Abstract type="html">Enables or disables in-app purchases in the editor.</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)enableInAppPurchases:(BOOL)enableIAP</Declaration>
			<Parameters>
				<Parameter>
					<Name>enableIAP</Name>
					<Abstract type="html">YES enables IAPs, NO disables them.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/enableInAppPurchases:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/usePCNStagingEnvironment:</TokenIdentifier>
			<Abstract type="html">Configures the editor to point at the Premium Content Network&apos;s staging environment.</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)usePCNStagingEnvironment:(BOOL)usePCNStagingEnvironment</Declaration>
			<Parameters>
				<Parameter>
					<Name>usePCNStagingEnvironment</Name>
					<Abstract type="html">YES points the editor to staging, no points it to production.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/usePCNStagingEnvironment:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/purgeGPUMemoryWhenPossible:</TokenIdentifier>
			<Abstract type="html">Configures the editor to free GPU memory when possible.</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)purgeGPUMemoryWhenPossible:(BOOL)purgeGPUMemory</Declaration>
			<Parameters>
				<Parameter>
					<Name>purgeGPUMemory</Name>
					<Abstract type="html">YES purges GPU memory when possible, NO retains it.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/purgeGPUMemoryWhenPossible:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/setLeftNavigationBarButtonTitle:</TokenIdentifier>
			<Abstract type="html">Sets the text of the editor&apos;s left navigation bar button.</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)setLeftNavigationBarButtonTitle:(NSString *)leftNavigationBarButtonTitle</Declaration>
			<Parameters>
				<Parameter>
					<Name>leftNavigationBarButtonTitle</Name>
					<Abstract type="html">An NSString value represented by one of the three kAFLeftNavigationTitlePreset keys.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setLeftNavigationBarButtonTitle:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/setRightNavigationBarButtonTitle:</TokenIdentifier>
			<Abstract type="html">Sets the text of the editor&apos;s right navigation bar button.</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)setRightNavigationBarButtonTitle:(NSString *)rightNavigationBarButtonTitle</Declaration>
			<Parameters>
				<Parameter>
					<Name>rightNavigationBarButtonTitle</Name>
					<Abstract type="html">An NSString value represented by one of the three kAFRightNavigationTitlePreset keys.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setRightNavigationBarButtonTitle:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/setToolOrder:</TokenIdentifier>
			<Abstract type="html">Sets the type and order of tools to be presented by the editor.</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)setToolOrder:(NSArray *)toolOrder</Declaration>
			<Parameters>
				<Parameter>
					<Name>toolOrder</Name>
					<Abstract type="html">An NSArray containing NSString values represented by one of the tool keys</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setToolOrder:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/disableLocalization:</TokenIdentifier>
			<Abstract type="html">Configures the editor to use localization or not.</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)disableLocalization:(BOOL)disableLocalization</Declaration>
			<Parameters>
				<Parameter>
					<Name>disableLocalization</Name>
					<Abstract type="html">YES disables localization, NO leaves it enabled.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/disableLocalization:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/setSupportedIpadOrientations:</TokenIdentifier>
			<Abstract type="html">Configures the orientations the editor can have on the iPad form factor.</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)setSupportedIpadOrientations:(NSArray *)supportedOrientations</Declaration>
			<Parameters>
				<Parameter>
					<Name>supportedOrientations</Name>
					<Abstract type="html">An NSArray containing NSNumbers each representing a valid UIInterfaceOrientation.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setSupportedIpadOrientations:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/setCropToolCustomEnabled:</TokenIdentifier>
			<Abstract type="html">Enables or disables the custom crop size.</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)setCropToolCustomEnabled:(BOOL)cropToolEnableCustom</Declaration>
			<Parameters>
				<Parameter>
					<Name>cropToolEnableCustom</Name>
					<Abstract type="html">YES enables the custom crop size, NO disables it.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCropToolCustomEnabled:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/setCropToolOriginalEnabled:</TokenIdentifier>
			<Abstract type="html">Enables or disables the custom crop size.</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)setCropToolOriginalEnabled:(BOOL)cropToolEnableOriginal</Declaration>
			<Parameters>
				<Parameter>
					<Name>cropToolEnableOriginal</Name>
					<Abstract type="html">YES enables the original crop size, NO disables it.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCropToolOriginalEnabled:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/setCropToolInvertEnabled:</TokenIdentifier>
			<Abstract type="html">Enables or disables the invertability of crop sizes.</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)setCropToolInvertEnabled:(BOOL)cropToolEnableInvert</Declaration>
			<Parameters>
				<Parameter>
					<Name>cropToolEnableInvert</Name>
					<Abstract type="html">YES enables the crop size inversion, NO disables it.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCropToolInvertEnabled:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/setCropToolPresets:</TokenIdentifier>
			<Abstract type="html">Sets the availability and order of crop preset options.</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)setCropToolPresets:(NSArray *)cropToolPresets</Declaration>
			<Parameters>
				<Parameter>
					<Name>cropToolPresets</Name>
					<Abstract type="html">An array of dictionaries. The dictionaries should</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCropToolPresets:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/setCropToolCellWidth:</TokenIdentifier>
			<Abstract type="html">This property sets the width of the crop preset selection cells.</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)setCropToolCellWidth:(float)cropToolCellWidth</Declaration>
			<Parameters>
				<Parameter>
					<Name>cropToolCellWidth</Name>
					<Abstract type="html">The width of the crop option cell in points.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCropToolCellWidth:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/setStatusBarBackgroundColor:</TokenIdentifier>
			<Abstract type="html">This property sets the color of the status bar background on devices running iOS 7</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)setStatusBarBackgroundColor:(UIColor *)statusBarColor</Declaration>
			<Parameters>
				<Parameter>
					<Name>statusBarColor</Name>
					<Abstract type="html">The color of the status bar.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setStatusBarBackgroundColor:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/setStatusBarStyle:</TokenIdentifier>
			<Abstract type="html">This property sets the UIStatusBarStyle of the Editor</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)setStatusBarStyle:(UIStatusBarStyle)statusBarStyle</Declaration>
			<Parameters>
				<Parameter>
					<Name>statusBarStyle</Name>
					<Abstract type="html">The status bar style to use.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setStatusBarStyle:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPhotoEditorCustomization/setUsingIOS6SDK:</TokenIdentifier>
			<Abstract type="html">Set this property to true if your app is builidng using the iOS6 SDK</Abstract>
			<DeclaredIn>AFPhotoEditorCustomization.h</DeclaredIn>			
			
			<Declaration>+ (void)setUsingIOS6SDK:(BOOL)usingIOS6SDK</Declaration>
			<Parameters>
				<Parameter>
					<Name>usingIOS6SDK</Name>
					<Abstract type="html">Whether your app is using the iOS 6 SDK</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setUsingIOS6SDK:</Anchor>
		</Token>
		
	</File>
</Tokens>